{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/hernandez/Escritorio/repositorios/SuperNova/src/screens/GalleryScreen.js\";\n\nimport { Container, Card, H1, CardItem, Body, Button, Spinner, Icon, Left, Right } from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport backend from \"../api/backendImage\";\nimport getEnvVars from \"../../enviroment\";\nimport { Grid } from \"react-native-easy-grid\";\n\nvar _getEnvVars = getEnvVars(),\n    apisearch = _getEnvVars.apisearch;\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar GalleryScreen = function GalleryScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var search = route.params.search;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      gallery = _useState2[0],\n      setGallery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  function numeroAleatorio(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  var getGallery = function getGallery() {\n    var response;\n    return _regeneratorRuntime.async(function getGallery$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(backend.get(apisearch + \"=\" + search + \"&page=1\"));\n\n          case 3:\n            response = _context.sent;\n            setGallery(response.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(true);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getGallery();\n  }, []);\n\n  if (!gallery) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, React.createElement(Spinner, {\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/SuperNova.png\"),\n    style: styles.photoImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/portada2.jpg\"),\n    style: styles.wallpaper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), React.createElement(H1, {\n    style: {\n      color: \"#FFFFFF\",\n      textAlign: \"center\",\n      fontSize: 28\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Resultados encontrados de \", search, \" son \", gallery.collection.items.length), React.createElement(FlatList, {\n    data: gallery.collection.items,\n    keyExtractor: function keyExtractor(item) {\n      return item.data[0].nasa_id;\n    },\n    ListEmptyComponent: React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"\\xA1No se han encontrado nada!\"),\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        style: styles.container,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginTop: 50\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, React.createElement(CardItem, {\n        style: {\n          backgroundColor: \"#FFFFFF\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, React.createElement(CardItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 19\n        }\n      }, React.createElement(Left, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/Hubble.png\"),\n        style: {\n          height: 50,\n          width: 50,\n          marginLeft: -10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 23\n        }\n      }), React.createElement(Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, \"Title: \", item.data[0].title), React.createElement(Text, {\n        note: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }, \"Nasa Id: \", item.data[0].nasa_id), React.createElement(Text, {\n        note: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, \"Date Created: \", item.data[0].date_created))))), React.createElement(CardItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: \"\" + item.links[0].href\n        },\n        style: styles.marsphoto,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      })), React.createElement(CardItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, React.createElement(Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, \"Type: \", item.data[0].media_type), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \"description: \", item.data[0].description))), React.createElement(CardItem, {\n        style: {\n          backgroundColor: \"#FFFFFF\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, React.createElement(Left, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        active: true,\n        name: \"thumbs-up\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 23\n        }\n      }, numeroAleatorio(1, 1000), \" Likes\"))), React.createElement(Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        active: true,\n        name: \"chatbubbles\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 23\n        }\n      }, \" \", numeroAleatorio(1, 100), \"Comments\"))), React.createElement(Right, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, numeroAleatorio(1, 24), \"h ago\")))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: \"1%\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  marsphoto: {\n    flex: 1,\n    width: width,\n    height: height * 0.3,\n    resizeMode: \"contain\"\n  },\n  photo: {\n    width: width,\n    height: height * 0.33,\n    resizeMode: \"stretch\"\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  photoImage: {\n    width: width,\n    height: \"12%\",\n    resizeMode: \"contain\"\n  },\n  wallpaper: {\n    flex: 1,\n    height: height * 0.8\n  }\n});\nexport default GalleryScreen;","map":{"version":3,"sources":["/home/hernandez/Escritorio/repositorios/SuperNova/src/screens/GalleryScreen.js"],"names":["Container","Card","H1","CardItem","Body","Button","Spinner","Icon","Left","Right","React","useEffect","useState","backend","getEnvVars","Grid","apisearch","Dimensions","get","width","height","GalleryScreen","route","navigation","search","params","gallery","setGallery","error","setError","numeroAleatorio","min","max","Math","floor","random","getGallery","response","data","flex","justifyContent","require","styles","photoImage","wallpaper","color","textAlign","fontSize","collection","items","length","item","nasa_id","container","marginTop","backgroundColor","marginLeft","title","date_created","uri","links","href","marsphoto","media_type","description","StyleSheet","create","alignItems","resizeMode","photo","image"],"mappings":"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","sourcesContent":["//Importamos los archivos que nesecitamos de otras carpetas o librerias\nimport {\n  Container,\n  Card,\n  H1,\n  CardItem,\n  Body,\n  Button,\n  Spinner,\n  Icon,\n  Left,\n  Right,\n} from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  Dimensions,\n  FlatList,\n} from \"react-native\";\n\nimport backend from \"../api/backendImage\";\nimport getEnvVars from \"../../enviroment\";\nimport { Grid } from \"react-native-easy-grid\";\n//Variables que necesitaremos importar de envoriment\n\nconst { apisearch } = getEnvVars();\n\n//Dimenciones de la pantalla\nconst { width, height } = Dimensions.get(\"window\");\n\nconst GalleryScreen = ({ route, navigation }) => {\n  // Estado del objeto\n  const { search } = route.params;\n\n  const [gallery, setGallery] = useState(null);\n  const [error, setError] = useState(false);\n\n  //Funcion que retorna un numero aleatorio entre los maximos y minimos\n  function numeroAleatorio(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const getGallery = async () => {\n    try {\n      const response = await backend.get(`${apisearch}=${search}&page=1`);\n\n      setGallery(response.data);\n    } catch (error) {\n      // Error al momento de ejecutar la petición a la API\n      setError(true);\n    }\n  };\n  // Hook de efecto se ejecuta cada vez que se rendiriza la pantala\n  useEffect(() => {\n    // Efecto secundario realizar la petición a la API solo se ejecutara una vez\n    getGallery();\n  }, []);\n\n  //flex en caso de que la ventana sea diferenete\n  if (!gallery) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\" }}>\n        <Spinner color=\"blue\" />\n      </View>\n    );\n  }\n\n  return (\n    <Container>\n      <Image\n        source={require(\"../../assets/SuperNova.png\")}\n        style={styles.photoImage}\n      />\n\n      <Grid>\n        <Image\n          source={require(\"../../assets/portada2.jpg\")}\n          style={styles.wallpaper}\n        />\n      </Grid>\n      <H1 style={{ color: \"#FFFFFF\", textAlign: \"center\", fontSize: 28,}}>\n        Resultados encontrados de {search} son {gallery.collection.items.length}\n      </H1>\n      <FlatList\n        data={gallery.collection.items}\n        keyExtractor={(item) => item.data[0].nasa_id}\n        //keyExtractor={(item) => item.id}\n        ListEmptyComponent={<Text>¡No se han encontrado nada!</Text>}\n        renderItem={({ item }) => {\n          return (\n            <View style={styles.container}>\n              <Card style={{ marginTop: 50 }}>\n                <CardItem style={{ backgroundColor: \"#FFFFFF\" }}>\n                  <CardItem>\n                    <Left>\n                      <Image\n                        source={require(\"../../assets/Hubble.png\")}\n                        style={{ height: 50, width: 50, marginLeft: -10 }}\n                      />\n                      <Body>\n                        <Text>Title: {item.data[0].title}</Text>\n                        <Text note>Nasa Id: {item.data[0].nasa_id}</Text>\n                        <Text note>\n                          Date Created: {item.data[0].date_created}\n                        </Text>\n                      </Body>\n                    </Left>\n                  </CardItem>\n                </CardItem>\n                <CardItem>\n                  <Image\n                    source={{\n                      uri: `${item.links[0].href}`,\n                    }}\n                    style={styles.marsphoto}\n                  />\n                </CardItem>\n                <CardItem>\n                  <Body>\n                    <Text>Type: {item.data[0].media_type}</Text>\n                    <Text>description: {item.data[0].description}</Text>\n                  </Body>\n                </CardItem>\n                <CardItem style={{ backgroundColor: \"#FFFFFF\" }}>\n                  <Left>\n                    <Button transparent>\n                      <Icon active name=\"thumbs-up\" />\n                      <Text>{numeroAleatorio(1, 1000)} Likes</Text>\n                    </Button>\n                  </Left>\n                  <Body>\n                    <Button transparent>\n                      <Icon active name=\"chatbubbles\" />\n                      <Text> {numeroAleatorio(1, 100)}Comments</Text>\n                    </Button>\n                  </Body>\n                  <Right>\n                    <Text>{numeroAleatorio(1, 24)}h ago</Text>\n                  </Right>\n                </CardItem>\n              </Card>\n            </View>\n          );\n        }}\n      />\n    </Container>\n  );\n};\n\n//Estilos de la pantalla\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: \"1%\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  marsphoto: {\n    flex: 1,\n    width: width,\n    height: height * 0.3,\n    resizeMode: \"contain\",\n  },\n  photo: {\n    width: width,\n    height: height * 0.33,\n    resizeMode: \"stretch\",\n  },\n\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n  },\n  photoImage: {\n    width: width,\n    height: \"12%\",\n    resizeMode: \"contain\",\n  },\n  wallpaper: {\n    flex: 1,\n    height: height * 0.8,\n  }\n});\n\n//exportamos la pantalla\nexport default GalleryScreen;\n"]},"metadata":{},"sourceType":"module"}
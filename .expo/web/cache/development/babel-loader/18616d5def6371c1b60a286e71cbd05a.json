{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SuperNova\\\\src\\\\screens\\\\DayImage.js\";\n\nimport { Container, Form, Input, Item, H1, H3, H4, H5, Body, Button, Center, Spinner, Icon, Left, Thumbnail, Header, Content, Card, CardItem, Right } from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport backend from \"../api/backend\";\nimport getEnvVars from \"../../enviroment\";\n\nvar _getEnvVars = getEnvVars(),\n    apiKey = _getEnvVars.apiKey,\n    apiImageUrl = _getEnvVars.apiImageUrl;\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar DayImage = function DayImage() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dayImage = _useState2[0],\n      setMartsRobots = _useState2[1];\n\n  function numeroAleatorio(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  var getMarsRobot = function getMarsRobot() {\n    var response;\n    return _regeneratorRuntime.async(function getMarsRobot$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(backend.get(\"planetary/apod?api_key=\" + apiKey));\n\n          case 3:\n            response = _context.sent;\n            setMartsRobots(response.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(true);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getMarsRobot();\n  }, []);\n\n  if (!dayImage) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, React.createElement(Spinner, {\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/SuperNova.png\"),\n    style: styles.photoImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), React.createElement(Content, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/portada2.jpg\"),\n    style: {\n      height: 1000\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(CardItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Thumbnail, {\n    source: {\n      uri: \"Image URL\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, React.createElement(H1, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, dayImage.title), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"copyright: \", dayImage.copyright), React.createElement(Text, {\n    note: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"date: \", dayImage.date, \" \")))), React.createElement(CardItem, {\n    cardBody: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: \"\" + dayImage.url\n    },\n    style: {\n      height: 300,\n      width: null,\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), React.createElement(H3, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"explanati\\xF3n\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, dayImage.explanation), React.createElement(CardItem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, React.createElement(Left, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    active: true,\n    name: \"thumbs-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, numeroAleatorio(1, 1000), \" Likes\"))), React.createElement(Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    transparent: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, React.createElement(Icon, {\n    active: true,\n    name: \"chatbubbles\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, numeroAleatorio(1, 1000), \" Comments\"))), React.createElement(Right, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, numeroAleatorio(1, 24), \" h ago\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    margin: 15\n  },\n  marsphoto: {\n    height: 200,\n    width: null,\n    flex: 1\n  },\n  photo: {\n    width: width,\n    height: height * 0.33,\n    resizeMode: \"stretch\"\n  },\n  search: {\n    flexDirection: \"column\",\n    flex: 1,\n    marginTop: 40,\n    marginRight: 15\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  photoImage: {\n    width: width,\n    height: \"12%\",\n    resizeMode: \"stretch\"\n  }\n});\nexport default DayImage;","map":{"version":3,"sources":["C:/Users/HP/Desktop/SuperNova/src/screens/DayImage.js"],"names":["Container","Form","Input","Item","H1","H3","H4","H5","Body","Button","Center","Spinner","Icon","Left","Thumbnail","Header","Content","Card","CardItem","Right","React","useEffect","useState","backend","getEnvVars","apiKey","apiImageUrl","Dimensions","get","width","height","DayImage","dayImage","setMartsRobots","numeroAleatorio","min","max","Math","floor","random","getMarsRobot","response","data","setError","flex","justifyContent","require","styles","photoImage","uri","title","copyright","date","url","explanation","StyleSheet","create","container","alignItems","input","margin","marsphoto","photo","resizeMode","search","flexDirection","marginTop","marginRight","image"],"mappings":"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","sourcesContent":["import {\n  Container,\n  Form,\n  Input,\n  Item,\n  H1,\n  H3,\n  H4,\n  H5,\n  Body,\n  Button,\n  Center,\n  Spinner,\n  Icon,\n  Left,\n  Thumbnail,\n  Header,\n  Content,\n  Card,\n  CardItem,\n  Right,\n} from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  ImageBackground,\n  Dimensions,\n  FlatList,\n} from \"react-native\";\n\nimport backend from \"../api/backend\";\nimport getEnvVars from \"../../enviroment\";\n\nconst { apiKey, apiImageUrl } = getEnvVars();\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst DayImage = () => {\n  // Estado\n  const [dayImage, setMartsRobots] = useState(null);\n\n  function numeroAleatorio(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const getMarsRobot = async () => {\n    try {\n      // Consultar la API\n      const response = await backend.get(`planetary/apod?api_key=${apiKey}`);\n      // console.log(response.data);\n\n      setMartsRobots(response.data);\n    } catch (error) {\n      // Error al momento de ejecutar la petición a la API\n      setError(true);\n    }\n  };\n\n  // Hook de efecto\n  useEffect(() => {\n    // Efecto secundario realizar la petición a la API\n    getMarsRobot();\n  }, []);\n\n  if (!dayImage) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\" }}>\n        <Spinner color=\"blue\" />\n      </View>\n    );\n  }\n  return (\n    <Container>\n      <Image\n        source={require(\"../../assets/SuperNova.png\")}\n        style={styles.photoImage}\n      />\n      <Content>\n      <Grid>\n        <Image\n          source={require(\"../../assets/portada2.jpg\")}\n          style={{ height: 1000 }}\n        />\n      </Grid>\n        <Card>\n          <CardItem>\n            <Left>\n              <Thumbnail source={{ uri: \"Image URL\" }} />\n              <Body>\n                <H1>{dayImage.title}</H1>\n                <Text>copyright: {dayImage.copyright}</Text>\n                <Text note>date: {dayImage.date} </Text>\n              </Body>\n            </Left>\n          </CardItem>\n          <CardItem cardBody>\n            <Image\n              source={{ uri: `${dayImage.url}` }}\n              style={{ height: 300, width: null, flex: 1 }}\n            />\n          </CardItem>\n          <H3>explanatión</H3>\n          <Text>{dayImage.explanation}</Text>\n\n          <CardItem>\n            <Left>\n              <Button transparent>\n                <Icon active name=\"thumbs-up\" />\n                <Text>{numeroAleatorio(1, 1000)} Likes</Text>\n              </Button>\n            </Left>\n            <Body>\n              <Button transparent>\n                <Icon active name=\"chatbubbles\" />\n                <Text>{numeroAleatorio(1, 1000)} Comments</Text>\n              </Button>\n            </Body>\n            <Right>\n              <Text>{numeroAleatorio(1, 24)} h ago</Text>\n            </Right>\n          </CardItem>\n        </Card>\n      </Content>\n    </Container>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    margin: 15,\n  },\n  marsphoto: {\n    height: 200,\n    width: null,\n    flex: 1,\n  },\n  photo: {\n    width: width,\n    height: height * 0.33,\n    resizeMode: \"stretch\",\n  },\n  search: {\n    flexDirection: \"column\",\n    flex: 1,\n    marginTop: 40,\n    marginRight: 15,\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n  },\n  photoImage: {\n    width: width,\n    height: \"12%\",\n    resizeMode: \"stretch\",\n    //marginTop: 20,\n  },\n});\n\nexport default DayImage;\n"]},"metadata":{},"sourceType":"module"}
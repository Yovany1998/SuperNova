{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SuperNova\\\\src\\\\screens\\\\MarsRobot.js\";\n\nimport { Container, Form, Input, Item, H1, Card, CardItem, H3, H4, H5, Body, Button, Center, Header, Spinner, Icon, Left, Thumbnail, Right } from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport backend from \"../api/backend\";\nimport getEnvVars from \"../../enviroment\";\nimport { Col, Row, Grid } from 'react-native-easy-grid';\n\nvar _getEnvVars = getEnvVars(),\n    apiKey = _getEnvVars.apiKey;\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar MarsRobot = function MarsRobot() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      marsrobot = _useState2[0],\n      setMartsRobots = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  function numeroAleatorio(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  var getMarsRobot = function getMarsRobot() {\n    var response;\n    return _regeneratorRuntime.async(function getMarsRobot$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(backend.get(\"mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=\" + apiKey));\n\n          case 3:\n            response = _context.sent;\n            setMartsRobots(response.data);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setError(true);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getMarsRobot();\n  }, []);\n\n  if (!marsrobot) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, React.createElement(Spinner, {\n      color: \"blue\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return React.createElement(Container, {\n    style: {\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/SuperNova.png\"),\n    style: styles.photoImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    style: styles.buttonHome,\n    block: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonHomeText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Home\")), React.createElement(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/portada2.jpg\"),\n    style: {\n      height: 1000\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), React.createElement(FlatList, {\n    data: marsrobot.photos,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ListEmptyComponent: React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }, \"\\xA1No se han encontrado nada!\"),\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        style: {\n          marginTop: 50\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, React.createElement(CardItem, {\n        style: {\n          backgroundColor: \"#FFFFFF\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, React.createElement(CardItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }, React.createElement(Left, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        source: require(\"../../assets/Wall-E.png\"),\n        style: {\n          height: 50,\n          width: 50,\n          marginLeft: -10\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }), React.createElement(Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 23\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }\n      }, \"Full name: \", item.camera.full_name), React.createElement(Text, {\n        note: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"Earth date: \", item.earth_date))))), React.createElement(CardItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: \"\" + item.img_src\n        },\n        style: styles.marsphoto,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      })), React.createElement(CardItem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      }, React.createElement(Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }\n      }, \"Code: \", item.id), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, \"Landing date: \", item.rover.landing_date), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, \"Launch date: \", item.rover.launch_date))), React.createElement(CardItem, {\n        style: {\n          backgroundColor: \"#FFFFFF\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 17\n        }\n      }, React.createElement(Left, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        active: true,\n        name: \"thumbs-up\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }, numeroAleatorio(1, 1000), \" Likes\"))), React.createElement(Body, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }\n      }, React.createElement(Button, {\n        transparent: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        active: true,\n        name: \"chatbubbles\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 23\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 23\n        }\n      }, \" \", numeroAleatorio(1, 100), \"Comments\"))), React.createElement(Right, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }\n      }, numeroAleatorio(1, 24), \"h ago\")))));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    margin: 15\n  },\n  marsphoto: {\n    height: 600,\n    width: null,\n    flex: 1\n  },\n  photo: {\n    width: width,\n    height: height * 0.33,\n    resizeMode: \"stretch\"\n  },\n  search: {\n    flexDirection: \"column\",\n    flex: 1,\n    marginTop: 40,\n    marginRight: 15\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  photoImage: {\n    width: width,\n    height: 120,\n    resizeMode: \"stretch\"\n  },\n  buttonHome: {\n    backgroundColor: \"#333\"\n  },\n  buttonHomeText: {\n    color: \"#FFFFFF\",\n    fontSize: 28\n  }\n});\nexport default MarsRobot;","map":{"version":3,"sources":["C:/Users/HP/Desktop/SuperNova/src/screens/MarsRobot.js"],"names":["Container","Form","Input","Item","H1","Card","CardItem","H3","H4","H5","Body","Button","Center","Header","Spinner","Icon","Left","Thumbnail","Right","React","useEffect","useState","backend","getEnvVars","Col","Row","Grid","apiKey","Dimensions","get","width","height","MarsRobot","marsrobot","setMartsRobots","error","setError","search","setSearch","numeroAleatorio","min","max","Math","floor","random","getMarsRobot","response","data","flex","justifyContent","marginTop","require","styles","photoImage","buttonHome","buttonHomeText","photos","item","id","toString","backgroundColor","marginLeft","camera","full_name","earth_date","uri","img_src","marsphoto","rover","landing_date","launch_date","StyleSheet","create","container","alignItems","input","margin","photo","resizeMode","flexDirection","marginRight","image","color","fontSize"],"mappings":"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","sourcesContent":["import {\n  Container,\n  Form,\n  Input,\n  Item,\n  H1,\n  Card,\n  CardItem,\n  H3,\n  H4,\n  H5,\n  Body,\n  Button,\n  Center,\n  Header,\n  Spinner,\n  Icon,\n  Left,\n  Thumbnail,\n  Right,\n} from \"native-base\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Text,\n  Image,\n  ImageBackground,\n  Dimensions,\n  FlatList,\n} from \"react-native\";\n\nimport backend from \"../api/backend\";\nimport getEnvVars from \"../../enviroment\";\nimport { Col, Row, Grid } from 'react-native-easy-grid';\n\nconst { apiKey } = getEnvVars();\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst MarsRobot = () => {\n  // Estado\n  const [marsrobot, setMartsRobots] = useState(null);\n  const [error, setError] = useState(false);\n  const [search, setSearch] = useState(\"\");\n\n  function numeroAleatorio(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const getMarsRobot = async () => {\n    try {\n      // Consultar la API\n      const response = await backend.get(\n        `mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=${apiKey}`\n      );\n      //console.log(response.data);\n      setMartsRobots(response.data);\n    } catch (error) {\n      // Error al momento de ejecutar la petición a la API\n      setError(true);\n    }\n  };\n\n  // Hook de efecto\n  useEffect(() => {\n    // Efecto secundario realizar la petición a la API\n    getMarsRobot();\n  }, []);\n\n  if (!marsrobot) {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\" }}>\n        <Spinner color=\"blue\" />\n      </View>\n    );\n  }\n\n  return (\n    <Container style={{ marginTop: 20,}}>\n      <Image\n        source={require(\"../../assets/SuperNova.png\")}\n        style={styles.photoImage}\n      />\n      <Button style={styles.buttonHome} block>\n        <Text style={styles.buttonHomeText}>\n          Home\n        </Text>\n      </Button>\n      <Grid>\n        <Image\n          source={require(\"../../assets/portada2.jpg\")}\n          style={{ height: 1000,}}\n        />\n        </Grid>\n      <FlatList\n        data={marsrobot.photos}\n        keyExtractor={(item) => item.id.toString()}\n        //keyExtractor={(item) => item.id}\n        ListEmptyComponent={<Text>¡No se han encontrado nada!</Text>}\n        renderItem={({ item }) => {\n          return (\n            <View>\n              <Card style={{ marginTop: 50}}>\n                <CardItem style={{ backgroundColor: \"#FFFFFF\"}}>\n                  <CardItem>\n                    <Left>\n                    <Image source={require(\"../../assets/Wall-E.png\")} style={{ height: 50, width: 50, marginLeft: -10}}/>\n                      <Body>\n                        <Text>Full name: {item.camera.full_name}</Text>\n                        <Text note>Earth date: {item.earth_date}</Text>\n                      </Body>\n                    </Left>\n                  </CardItem>\n                </CardItem>\n                <CardItem>\n                  <Image\n                    source={{\n                      uri: `${item.img_src}`,\n                    }}\n                    style={styles.marsphoto}\n                  />\n                </CardItem>\n                <CardItem>\n                  <Body>\n                    <Text>Code: {item.id}</Text>\n\n                    <Text>Landing date: {item.rover.landing_date}</Text>\n                    <Text>Launch date: {item.rover.launch_date}</Text>\n                  </Body>\n                </CardItem>\n                <CardItem style={{ backgroundColor: \"#FFFFFF\" }}>\n                  <Left>\n                    <Button transparent>\n                      <Icon active name=\"thumbs-up\" />\n                      <Text>{numeroAleatorio(1, 1000)} Likes</Text>\n                    </Button>\n                  </Left>\n                  <Body>\n                    <Button transparent>\n                      <Icon active name=\"chatbubbles\" />\n                      <Text> {numeroAleatorio(1, 100)}Comments</Text>\n                    </Button>\n                  </Body>\n                  <Right>\n                    <Text>{numeroAleatorio(1, 24)}h ago</Text>\n                  </Right>\n                </CardItem>\n              </Card>\n            </View>\n          );\n        }}\n      />\n    </Container>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  input: {\n    margin: 15,\n  },\n  marsphoto: {\n    height: 600,\n    width: null,\n    flex: 1,\n  },\n  photo: {\n    width: width,\n    height: height * 0.33,\n    resizeMode: \"stretch\",\n  },\n  search: {\n    flexDirection: \"column\",\n    flex: 1,\n    marginTop: 40,\n    marginRight: 15,\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n  },\n  photoImage: {\n    width: width,\n    height: 120,\n    resizeMode: \"stretch\",\n    //marginTop: 20,\n  },\n  buttonHome: {\n    backgroundColor: \"#333\",\n  },\n  buttonHomeText: {\n    color: \"#FFFFFF\",\n    fontSize: 28,\n  },\n});\nexport default MarsRobot;\n"]},"metadata":{},"sourceType":"module"}